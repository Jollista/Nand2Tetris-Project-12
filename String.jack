class String
{
	field Array buffer;
	field int bufferLength;
	field int strLength

	constructor String new(int maxLength)
	{
		if (maxLength < 1)
		{
			let maxLength = 1;
		}
		let buffer = Array.new(maxLength);
		let bufferLength = maxLength;
		let strLength = 0;
		return this;
	}

	method void dispose()
	{
		do buffer.dispose();
	}

	method int length()
	{
		return strLength;
	}

	method char charAt(int j)
	{
		return buffer[j];
	}

	method void setCharAt(int j, char c)
	{
		let buffer[j] = c;
	}

	method String appendChar(char c)
	{
		if (strLength < bufferLength)
		{
			let buffer[strLength] = c;
			let strLength = strLength + 1;
		}
		return this;
	}

	method void eraseLastChar()
	{
		if (strLength > 0)
		{
			let strLength = strLength - 1;
		}
	}

	method int intValue()
	{
		let val = 0;
		let i = 0;
		while (i < strLength)
		{
			let d = buffer[i] - 48	//int value of character
			let val = val * 10 + d;
			let i = i + 1;
		}
		return val;
	}

	method void setInt(int j)
	{
		let strLength = 0;

		if (j < 0)
		{
			let j = -1 * j;
			do appendChar(45);	//- sign
		}

		do setIntHelper(j);
	}

	method void setIntHelper(int j)
	{
		let lastDigit = j - j/10*10;	//j / 10 * 10 removes last digit, j - j/10*10 = j % 10
		let c = lastDigit + 48;		//characterize digit
		if (j < 10)
		{
			do appendChar(c);
		}
		else
		{
			do setIntHelper(j/10);
			do appendChar(c);
		}
	}

	function char backSpace()
	{
		return 129;
	}

	function char doubleQuote()
	{
		return 34;
	}

	function char newLine()
	{
		return 128;
	}
}